


<script>
    function themeAlpine(){
        return {
            menuOpen: false,
            cartOpen: false,
            cart: {
                "items": [],
            },
            cartMessage: "Cart",
            productAdded: false,
            storeUrl: "kwoka-test-theme.myshopify.com",
            get discountCode() {
                return getCookie("discount_code");
            },
            discounts: [
                {%- if settings.displayDiscounts -%}
                    {%- assign discounts = settings.discountCodes | split: "," -%}
                    {%- for discount in discounts -%}
                        {%- assign code = discount | split: ':' | first -%}
                        {%- assign multiplier = discount | split: ':' | last %}
                {
                    "code":"{{code}}",
                    "multiplier": {{multiplier}}
                },
                    {%- endfor -%}
                {%- endif %}
            ],
            alpineInit(){
                this.fetchCart();
            },
            fetchCart(){
                fetch(`https://${this.storeUrl}/cart.js`).then(response => response = response.json()).then(data => {this.cart = data});
            },
            updateCart(line,quantity){
                fetch(`https://${this.storeUrl}/cart/change.js`,
                {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        'line': line,
                        'quantity': quantity,
                    })
                }).then(response => {
                    
                    if (!response.ok) {
                        this.fetchCart();
                    };
                    return response.json()}).then(data => {this.cart.items_subtotal_price = data.items_subtotal_price}).catch((error) => {this.fetchCart();console.log(error)});
            },
            addCart(index,id,quantity){
                fetch(`https://${this.storeUrl}/cart/add.js`,
                {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        'id': id,
                        'quantity': quantity,
                    })
                }).then(response => {
                    this.fetchCart();
                    return response.json()});
            },
            dataImg(url){
                if (url.includes(".jpg")){
                    return url.replace(".jpg","_{width}x.jpg");
                } else if (url.includes(".png")){
                    return url.replace(".png","_{width}x.png");
                } else {
                    return url;
                };
            },
            formatCurrency(price){
                var formatter = new Intl.NumberFormat('en-US', {
                  style: 'currency',
                  currency: '{{cart.currency.iso_code}}',
                });

                return formatter.format(price/100);
            },
            discountPrice(price){
                var discount = this.discounts.findIndex(x => x.code.toLowerCase() === this.discountCode.toLowerCase());
                if (discount == -1){
                    return "null";
                } else {
                    var newPrice = price*(1-this.discounts[discount].multiplier);
                    return this.formatCurrency(newPrice);
                };
            },
            savings(price){
                var discount = this.discounts.findIndex(x => x.code.toLowerCase() === this.discountCode.toLowerCase());
                if (discount == -1){
                    return "null";
                } else {
                    var newPrice = price*this.discounts[discount].multiplier;
                    return '-'+this.formatCurrency(newPrice);
                };
            }

        }
    };
{%- comment -%}Global Functions{%- endcomment -%}


function getCookie(cname) {
  var name = cname + "=";
  var decodedCookie = decodeURIComponent(document.cookie);
  var ca = decodedCookie.split(';');
  for(var i = 0; i <ca.length; i++) {
    var c = ca[i];
    while (c.charAt(0) == ' ') {
      c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
      return c.substring(name.length, c.length);
    }
  }
  return "null";
}

function setCookie(cname, cvalue, exdays) {
  var d = new Date();
  d.setTime(d.getTime() + (exdays*24*60*60*1000));
  var expires = "expires="+ d.toUTCString();
  document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
  console.log('Setting Cookie: ' + cname + '\nto:' + expires);
}



</script>

